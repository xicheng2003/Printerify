# Generated by Django 5.2.3 on 2025-08-09 17:27

import api.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BindingGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('binding_type', models.CharField(default='none', help_text='装订方式', max_length=50)),
                ('binding_cost', models.DecimalField(decimal_places=2, default=0, help_text='此组的装订费用', max_digits=10)),
                ('sequence_in_order', models.PositiveIntegerField(default=0, help_text='组在订单中的顺序')),
            ],
            options={
                'ordering': ['sequence_in_order'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_filename', models.CharField(max_length=255)),
                ('file_path', models.FileField(help_text='文件存储路径', upload_to=api.models.get_order_document_path)),
                ('color_mode', models.CharField(default='black_white', help_text='色彩模式', max_length=20)),
                ('print_sided', models.CharField(choices=[('single', '单面打印'), ('double', '双面打印'), ('single_double', '封面单面')], default='single', help_text='单双面', max_length=20)),
                ('paper_size', models.CharField(choices=[('a4', 'A4'), ('b5', 'B5')], default='a4', help_text='纸张尺寸', max_length=10)),
                ('copies', models.PositiveIntegerField(default=1, help_text='打印份数')),
                ('page_count', models.PositiveIntegerField(help_text='文件页数')),
                ('print_cost', models.DecimalField(decimal_places=2, help_text='此文件的打印费用', max_digits=10)),
                ('sequence_in_group', models.PositiveIntegerField(default=0, help_text='文件在组内的顺序')),
                ('group', models.ForeignKey(help_text='所属装订组', on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='api.bindinggroup')),
            ],
            options={
                'ordering': ['sequence_in_group'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(default=api.models.generate_order_number, help_text='时间戳订单号', max_length=20, unique=True)),
                ('pickup_code', models.CharField(blank=True, help_text='循环取件码 (P-XXX)', max_length=10)),
                ('pickup_code_num', models.IntegerField(default=0, help_text='用于排序的取件码数字部分')),
                ('phone_number', models.CharField(blank=True, help_text='顾客联系电话', max_length=20)),
                ('total_price', models.DecimalField(decimal_places=2, help_text='订单总价', max_digits=10)),
                ('status', models.CharField(choices=[('pending', '待处理'), ('processing', '处理中'), ('completed', '已完成'), ('cancelled', '已取消')], default='pending', help_text='订单状态', max_length=20)),
                ('payment_method', models.CharField(blank=True, help_text='支付方式', max_length=50, null=True)),
                ('payment_screenshot', models.FileField(blank=True, help_text='支付凭证截图', null=True, upload_to=api.models.get_payment_screenshot_path)),
                ('order_summary_pdf', models.FileField(blank=True, help_text='订单摘要PDF', null=True, upload_to='summaries/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, help_text='关联用户', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='bindinggroup',
            name='order',
            field=models.ForeignKey(help_text='所属订单', on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='api.order'),
        ),
    ]
